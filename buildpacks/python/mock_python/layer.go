// Code generated by MockGen. DO NOT EDIT.
// Source: kn-fn/python-function-buildpack/python (interfaces: Layer)

// Package mock_python is a generated GoMock package.
package mock_python

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLayer is a mock of Layer interface.
type MockLayer struct {
	ctrl     *gomock.Controller
	recorder *MockLayerMockRecorder
}

// MockLayerMockRecorder is the mock recorder for MockLayer.
type MockLayerMockRecorder struct {
	mock *MockLayer
}

// NewMockLayer creates a new mock instance.
func NewMockLayer(ctrl *gomock.Controller) *MockLayer {
	mock := &MockLayer{ctrl: ctrl}
	mock.recorder = &MockLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLayer) EXPECT() *MockLayerMockRecorder {
	return m.recorder
}

// PythonPath mocks base method.
func (m *MockLayer) PythonPath() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PythonPath")
	ret0, _ := ret[0].(string)
	return ret0
}

// PythonPath indicates an expected call of PythonPath.
func (mr *MockLayerMockRecorder) PythonPath() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PythonPath", reflect.TypeOf((*MockLayer)(nil).PythonPath))
}
