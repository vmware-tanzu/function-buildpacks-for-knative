# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause

name: Create Buildpack Release
run-name: Creating ${{ inputs.buildpack }} buildpack

env:
  REGISTRY: ghcr.io
  CONTAINER_PATH: ${{ github.repository }}
  DEPENDENCY_BASE_URL: https://github.com/${{ github.repository }}

on:
  workflow_dispatch:
    inputs:
      buildpack:
        type: choice
        description: Select a buildpack
        options:
        - python
        - java
      release-type:
        type: choice
        description: The type of release
        options:
        - patch
        - minor
        - major
      pre-release-label:
        type: string
        description: Pre-release label

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.19'
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: version
        uses: ./.github/actions/semver-bump
        with:
          path: ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          release-type: ${{ github.event.inputs.release-type }}
          pre-release: ${{ github.event.inputs.pre-release-label }}
        env:
          path: ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          version: ${{ steps.version.outputs.version }}
      - name: Bump Version
        run: |
            printf  $version > $path
      - name: Run Tests
        env:
          target: buildpacks.${{ github.event.inputs.buildpack }}.tests
        run: |
          make $target
      - name: Publish Container
        env:
          url: ${{ env.DEPENDENCY_BASE_URL }}
          registry: ${{ env.REGISTRY }}/${{ env.CONTAINER_PATH }} buildpacks.${{ github.event.inputs.buildpack }}.images.publish
        run: |
          make base_url=$url registry.location=other REGISTRY=$registry
      - name: Prepare Commit
        env:
          target: buildpacks.${{ github.event.inputs.buildpack }}.commit.prep
        run: |
          make $target
      - name: Commit
        env:
          version: ./buildpacks/${{ github.event.inputs.buildpack }}/VERSION
          buildpack: ./buildpacks/${{ github.event.inputs.buildpack }}/buildpack.toml
          message: Update ${{ github.event.inputs.buildpack }} buildpack version to ${{ steps.version.outputs.version }}
        run: |
          git add $version
          git add $buildpack
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m '$message'
          git push
      - name: Create Tag
        id: tag
        env:
          tag: ${{ github.event.inputs.buildpack }}-buildpack/v${{ steps.version.outputs.version }}
        run: |
          git tag $tag
          git push --tags
          echo "::set-output name=tag::$tag"
      - id: artifacts
        env:
          online_image_file: ./out/buildpacks/${{ github.event.inputs.buildpack }}/${{ steps.version.outputs.version }}/${{ github.event.inputs.buildpack }}-buildpack-${{ steps.version.outputs.version }}.image
          offline_image_file: ./out/buildpacks/${{ github.event.inputs.buildpack }}/${{ steps.version.outputs.version }}/${{ github.event.inputs.buildpack }}-buildpack-with-deps-${{ steps.version.outputs.version }}.image
        run: |
          echo "::set-output name=online_image_file::${online_image_file}"
          echo "::set-output name=online_image_file_content::$(head ${online_image_file})"
          echo "::set-output name=online_image_sha_file::${online_image_file}.sha256"
          echo "::set-output name=online_image_sha_file_content::$(cat ${online_image_file}.sha256)"

          echo "::set-output name=offline_image_file::${offline_image_file}"
          echo "::set-output name=offline_image_file_content::$(head ${offline_image_file})"
          echo "::set-output name=offline_image_sha_file::${offline_image_file}.sha256"
          echo "::set-output name=offline_image_sha_file_content::$(cat ${offline_image_file}.sha256)"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.event.inputs.buildpack }}-buildpack v${{ steps.version.outputs.version }}
          body: |
            The buildpack images can be found at:
            ```
            ${{ steps.artifacts.outputs.online_image_file_content }}
            ${{ steps.artifacts.outputs.offline_image_file_content }}
            ```
            # File Checksums
            ```
            ${{ steps.artifacts.outputs.online_image_sha_file_content }}
            ${{ steps.artifacts.outputs.offline_image_sha_file_content }}
            ```
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            ${{ steps.artifacts.outputs.online_image_file }}
            ${{ steps.artifacts.outputs.online_image_sha_file }}
            ${{ steps.artifacts.outputs.offline_image_file }}
            ${{ steps.artifacts.outputs.offline_image_sha_file }}
          token: ${{ secrets.GITHUB_TOKEN }}
